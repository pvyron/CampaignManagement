// <auto-generated />
using CaMan.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaMan.Persistence.Migrations
{
    [DbContext(typeof(CaManDbContext))]
    [Migration("20240816203515_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CaMan.Domain.Campaigns.Campaign", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("CaMan.Domain.Campaigns.CampaignContact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CampaignId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignContacts");
                });

            modelBuilder.Entity("CaMan.Domain.Contacts.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AdministrativeRegionId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<int>("CommunicationMethod")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MunicipalUnitId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MunicipalityId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RegionalUnitId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdministrativeRegionId");

                    b.HasIndex("MunicipalUnitId");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("RegionalUnitId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("CaMan.Domain.ElectoralBodies.AdministrativeRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AdministrativeRegion");
                });

            modelBuilder.Entity("CaMan.Domain.ElectoralBodies.MunicipalUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MunicipalUnit");
                });

            modelBuilder.Entity("CaMan.Domain.ElectoralBodies.Municipality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("CaMan.Domain.ElectoralBodies.RegionalUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RegionalUnit");
                });

            modelBuilder.Entity("CaMan.Domain.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactInfoId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CaMan.Domain.Campaigns.CampaignContact", b =>
                {
                    b.HasOne("CaMan.Domain.Campaigns.Campaign", null)
                        .WithMany("CampaignContacts")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CaMan.Domain.Contacts.Contact", b =>
                {
                    b.HasOne("CaMan.Domain.ElectoralBodies.AdministrativeRegion", "AdministrativeRegion")
                        .WithMany()
                        .HasForeignKey("AdministrativeRegionId");

                    b.HasOne("CaMan.Domain.ElectoralBodies.MunicipalUnit", "MunicipalUnit")
                        .WithMany()
                        .HasForeignKey("MunicipalUnitId");

                    b.HasOne("CaMan.Domain.ElectoralBodies.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("CaMan.Domain.ElectoralBodies.RegionalUnit", "RegionalUnit")
                        .WithMany()
                        .HasForeignKey("RegionalUnitId");

                    b.OwnsOne("CaMan.Domain.Shared.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<string>("ContactId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("RegionalPrefix")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ContactId");

                            b1.ToTable("Contacts");

                            b1.WithOwner()
                                .HasForeignKey("ContactId");
                        });

                    b.Navigation("AdministrativeRegion");

                    b.Navigation("MunicipalUnit");

                    b.Navigation("Municipality");

                    b.Navigation("PhoneNumber");

                    b.Navigation("RegionalUnit");
                });

            modelBuilder.Entity("CaMan.Domain.Users.User", b =>
                {
                    b.HasOne("CaMan.Domain.Contacts.Contact", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.OwnsOne("CaMan.Domain.Users.Password", "Password", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("HashAlgorithmName")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<int>("HashSize")
                                .HasColumnType("int");

                            b1.Property<int>("Iterations")
                                .HasColumnType("int");

                            b1.Property<string>("Salt")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("ContactInfo");

                    b.Navigation("Password");
                });

            modelBuilder.Entity("CaMan.Domain.Campaigns.Campaign", b =>
                {
                    b.Navigation("CampaignContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
